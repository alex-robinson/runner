usage: job analyze [-h] [--out OUT] [-i IN_STATE] [-m USER_MODULE]
                   [-v STATE_VARIABLES [STATE_VARIABLES ...]] [--stats]
                   [-l NAME=DIST [NAME=DIST ...]] [--custom-cost]
                   expdir

Analyze run results

This requires a user-defined `getvar` function and possibly `getcost`

Example
-------

    from runner.register import define

    @define.getvar
    def getvar(name, rundir):
        "retrieve state variable from run directory"
        ...

    @define.getcost
    def getcost(rundir):
        " cost function for one model, given its run directory (canonical form: J = (var - mean)/std)"
        ...

positional arguments:
  expdir                experiment directory to analyze

optional arguments:
  -h, --help            show this help message and exit
  --out OUT             experiment directory to write the diagnostics to (by
                        default same as expdir)
  -i IN_STATE, --in-state IN_STATE
                        input state file to consider (normally derived via
                        custom getvar)
  -m USER_MODULE, --user-module USER_MODULE
                        user-defined python module that contains model
                        definitions, necessary for postprocessing

model state:
  For now this requires a custom `getvar` function to retrieve state variables

  -v STATE_VARIABLES [STATE_VARIABLES ...], --state-variables STATE_VARIABLES [STATE_VARIABLES ...]
                        list of state variables to include in state.txt, does
                        not necessarily enter in the likelihood
  --stats               add statistics on model state

likelihood:
  likelihood is provided a list of distributions (same convention as job sample) or via a custom `getcost`

  -l NAME=DIST [NAME=DIST ...], --likelihood NAME=DIST [NAME=DIST ...]
                        NAME=N?MEAN,STD or NAME=U?MIN,MAX or
                        NAME=TYPE?ARG1[,ARG2 ...] where TYPE is any
                        scipy.stats distribution with *shp, loc, scale
                        parameters.
  --custom-cost         use custom getcost function (adds up) (see
                        runner.register.define)
